135 # ctrl+r history
136 fzf-history-widget() {
137   local selected num
138   setopt localoptions noglobsubst noposixbuiltins pipefail no_aliases 2> /dev/null
139   selected=( $(fc -rl 1 | perl -ne 'print if !$seen{(/^\s*[0-9]+\**\s+(.*)/, $1)}++' |
140     FZF_DEFAULT_OPTS="--height ${FZF_TMUX_HEIGHT:-40%} $FZF_DEFAULT_OPTS -n2..,.. --tiebreak=index --bind=ctrl-r:toggle-sort,ctrl-z:ignore $FZF_CTRL_R_OPTS --query=${(qqq)LBUFFER} +m"     $(__fzfcmd)) )
141   local ret=$?
142   if [ -n "$selected" ]; then
143     num=$selected[1]
144     if [ -n "$num" ]; then
145       zle vi-fetch-history -n $num
146     fi
147   fi
148   zle accept-line
149   zle reset-prompt
150   return $ret
151 }
152 zle     -N   fzf-history-widget
153 bindkey '^R' fzf-history-widget
154
155 # ctrl+shif+f search all global
156 fzf-file-widget() {
157   LBUFFER="${LBUFFER}$(
158   local cmd="${FZF_CTRL_T_COMMAND:-"command find '/' -type d \( -path '/mnt/*' -o -path '/proc/*' -o -path '/dev/*' -o -path '/home/user/.cache/*' -o -path '/home/user/.vscode*' -o -na    me 'node_modules' -o -name '*git*' \) -prune -false -o -iname '*' 2>/dev/null"}"
159   setopt localoptions pipefail no_aliases 2> /dev/null
160   local item
161   eval "$cmd" | FZF_DEFAULT_OPTS="--height ${FZF_TMUX_HEIGHT:-40%} --reverse --bind=ctrl-z:ignore $FZF_DEFAULT_OPTS $FZF_CTRL_T_OPTS" $(__fzfcmd) -m "$@" | while read item; do
162     echo -n "${(q)item} "
163   done
164   local ret=$?
165   echo
166   return $ret
167   )"
168 #  zle accept-line
169   local ret=$?
170   zle reset-prompt
171   return $ret
172 }
173 zle     -N   fzf-file-widget
174 bindkey '^]' fzf-file-widget
175
# ctrl+f search all local and cd/vi
177 fzf-file-widget-2() {
178    item="$(find . -type d \( -path '/mnt/*' -o -path '/proc/*' -o -path '/dev/*' -o -path '/home/user/.cache/*' -o -path '/home/user/.vscode*' -o -name 'node_modules' -o -name '*git*'     \) -prune -false -o -iname '*' 2>/dev/null | FZF_DEFAULT_OPTS="--height ${FZF_TMUX_HEIGHT:-40%} --reverse --bind=ctrl-z:ignore $FZF_DEFAULT_OPTS $FZF_CTRL_T_OPTS" $(__fzfcmd) -m "$@")"
179   if [[ -d ${item} ]]; then
180     cd "${item}" || return 1
181   elif [[ -f ${item} ]]; then
182     (vi "${item}" < /dev/tty) || return 1
183   else
184     return 1
185   fi
186    zle accept-line
187 }
188 zle     -N   fzf-file-widget-2
189 bindkey '^f' fzf-file-widget-2
190
191 # ctrl+e fasd-fzf cd/vi for recent folders/files
192 fasd-fzf-cd-vi() {
193    item="$(fasd -Rl "$1" | fzf -1 -0 --no-sort +m)"
194   if [[ -d ${item} ]]; then
195     cd "${item}" || return 1
196   elif [[ -f ${item} ]]; then
197     (vi "${item}" < /dev/tty) || return 1
198   else
199     return 1
200   fi
201    zle accept-line
202 }
203 zle -N fasd-fzf-cd-vi
204 bindkey '^e' fasd-fzf-cd-vi
205
# ctrl+k+o cd folder global
207 fzf-cd-widget() {
208   local cmd="${FZF_ALT_C_COMMAND:-"command find '/' -type d \( -path '/mnt/*' -o -path '/proc/*' -o -path '/dev/*' -o -path '/home/user/.cache/*' -o -path '/home/user/.vscode*' -o -nam    e 'node_modules' -o -name '*git*' \) -prune -false -o -type d -iname '*' 2>/dev/null"}"
209   setopt localoptions pipefail no_aliases 2> /dev/null
210   local dir="$(eval "$cmd" | FZF_DEFAULT_OPTS="--height ${FZF_TMUX_HEIGHT:-40%} --reverse --bind=ctrl-z:ignore $FZF_DEFAULT_OPTS $FZF_ALT_C_OPTS" $(__fzfcmd) +m)"
211  if [[ -z "$dir" ]]; then
212     zle redisplay
213     return 0
214   fi
215   zle push-line # Clear buffer. Auto-restored on next prompt.
216   BUFFER="cd ${(q)dir}"
217   zle accept-line
218   local ret=$?
219   unset dir # ensure this doesn't end up appearing in prompt expansion
220   zle reset-prompt
221   return $ret
222 }
223 zle     -N    fzf-cd-widget
224 bindkey '^k^o' fzf-cd-widget
225
226 # ctrl+o open vi file global
227 vi-file() {
228    file="$( find '/' -type d \( -path '/mnt/*' -o -path '/proc/*' -o -path '/dev/*' -o -path '/home/user/.cache/*' -o -path '/home/user/.vscode*' -o -name 'node_modules' -o -name '*git    *' \) -prune -false -o -type f -iname '*' 2>/dev/null | fzf -1 -0 --no-sort +m)" && (vi "${file}" < /dev/tty) || return 1
229    zle accept-line
230 }
231 zle -N vi-file
232 bindkey '^o' vi-file

